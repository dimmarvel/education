/*
5.	Создайте класс time, включающий себя целые значения часов, минут и се-
кунд. Напишите метод get_time(), спрашивающий время у пользователя,
и метод put_time(), выводящий время в формате 12:59:59. Внесите в функ-
цию get_time() проверку на ошибки, чтобы минимизировать возможность
неправильного ввода пользователем. Эта функция должна отдельно спра-
шивать часы, минуты и секунды, проверяя каждое введенное значение на
наличие флагов ошибок ios, а также проверяя, укладывается ли значение
в заданный диапазон. Для часов диапазон составляет от 0 до 23, а для ми-
нут и секунд — от 0 до 59. Не вводите данные в виде символьных строк с
последующим конвертированием. Вводите значения сразу же как int. Это
означает, что вы не сможете выявлять записи с ненужными здесь деся-
тичными запятыми, но это в данной программе не так важно.
В main() используйте цикл для получения значений времени от пользова-
теля функцией get_time(), затем для их вывода функцией put_time();
Введите часы: 8
Введите минуты: 2
Введите секунды: 39
Время= 8:02:39
Продолжить (y/n)? у
Введите часы: 28
Значение часов должно лежать между 0 и 23!
Введите часы: 1
Введите минуты: 10
Введите секунды: пять
Неправильно введены секунды!
Введите секунды: 5
Время = 1:10:05
*/
#include<iostream>
#include<fstream>
using namespace std;
class time {
private:
	int hour;
	int min;
	int sec;
public:
	time(): hour(0),min(0),sec(0){}
	void get_time() {
		cout << "Input\n Hour:"; cin >> hour;
		cout << "Min:"; cin >> min;
		cout << "Sec:"; cin >> sec;
	}
	void put_time() {

	}
};
int main()
{
	setlocale(LC_ALL, "Rus");

	system("pause");
	return 0;
}
